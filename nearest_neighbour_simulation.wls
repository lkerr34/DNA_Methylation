#!/usr/bin/env wolframscript
(* ::Package:: *)

(* Simulation of the nearest-neighbour collaborative system, using the Gillespie algorithm *)

(* Construct a system consisting of num CpG sites. All CpGs initially set as methylated to reflect the high methylation levels observed in most genomic regions. *)

num=500;
CpGs0=RandomChoice[{0,0,1}->{"u","h","m"},num];
n=Length[CpGs0];

(*Fix model papermeters and reaction rates*)

a=0.2;
x=50;
y=0.8;
k1=k2=a*y;
k3=k4=a;
k5=k6=k7=k8=a*x*y;
k9=k10=k11=k12=a*x;

(* Set the number of replicates to simulate (M), the end time for simulation (T), the time at which samples start to be taken (SS) and the number of samples desired (ntimes). Sample at constant time intervals (times). *)

M=10;
SS=0;
T=10;
ntimes=1000000/n;

times=Table[SS+(T-SS)*i/notimes,{i,0,ntimes-1,1}];

(* Use the Gillespie algorithm to simulate M realisations of the nearest-neighbour collaborative system. *)

StartTime=AbsoluteTime[];

For[m=1,m<=M,m++,

CpGsStates=Array[states,{Length[times],n}];
numreactions=0;

Print[m];

t=0;
rec=1;

CpGs=CpGs0;

reactions={};

For[i=1,i<=n,i++,
If[CpGs[[i]]=="u",
{rowreac={i,"u","h",k1, "NA"};
reactions=Append[reactions,rowreac]},
If[CpGs[[i]]=="h",
{rowreac1={i,"h","m",k2, "NA"};
rowreac2={i,"h","u",k4, "NA"};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]},
If[CpGs[[i]]=="m",
{rowreac={i,"m","h",k3, "NA"};
reactions=Append[reactions,rowreac]}
]
]
]
];

For[i=2, i<=n-1,i++,
If[CpGs[[i]]=="u",
{If[CpGs[[i-1]]=="h",
{rowreac={i,"u","h",k5,i-1};
reactions=Append[reactions,rowreac]
},
If[CpGs[[i-1]]=="m",
{rowreac={i,"u","h",k6,i-1};
reactions=Append[reactions,rowreac]}
]
];
If[CpGs[[i+1]]=="h",
{rowreac={i,"u","h",k5,i+1};
reactions=Append[reactions,rowreac]
},
If[CpGs[[i+1]]=="m",
{rowreac={i,"u","h",k6,i+1};
reactions=Append[reactions,rowreac]}
]
]
},
If[CpGs[[i]]=="h",
{If[CpGs[[i-1]]=="u",
{rowreac={i,"h","u",k12,i-1};
reactions=Append[reactions,rowreac]},
If[CpGs[[i-1]]=="h",
{rowreac1={i,"h","u",k11,i-1};
rowreac2={i,"h","m",k7,i-1};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]},
If[CpGs[[i-1]]=="m",
{rowreac={i,"h","m",k8,i-1};
reactions=Append[reactions,rowreac]
}
]
]
];
If[CpGs[[i+1]]=="u",
{rowreac={i,"h","u",k12,i+1};
reactions=Append[reactions,rowreac]},
If[CpGs[[i+1]]=="h",
{rowreac1={i,"h","u",k11,i+1};
rowreac2={i,"h","m",k7,i+1};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]},
If[CpGs[[i+1]]=="m",
{rowreac={i,"h","m",k8,i+1};
reactions=Append[reactions,rowreac]}
]
]
]
},
If[CpGs[[i]]=="m",
{If[CpGs[[i-1]]=="u",
{rowreac={i,"m","h",k10,i-1};
reactions=Append[reactions,rowreac]},
If[CpGs[[i-1]]=="h",
{rowreac={i,"m","h",k9,i-1};
reactions=Append[reactions,rowreac]}
]
];
If[CpGs[[i+1]]=="u",
{rowreac={i,"m","h",k10,i+1};
reactions=Append[reactions,rowreac]},
If[CpGs[[i+1]]=="h",
{rowreac={i,"m","h",k9,i+1};
reactions=Append[reactions,rowreac]}
]
]
}
]
]
]
];



If[CpGs[[1]]=="u",
{If[CpGs[[n]]=="h",
{rowreac={1,"u","h",k5,n};
reactions=Append[reactions,rowreac]
},
If[CpGs[[n]]=="m",
{rowreac={1,"u","h",k6,n};
reactions=Append[reactions,rowreac]}
]
];
If[CpGs[[2]]=="h",
{rowreac={1,"u","h",k5,2};
reactions=Append[reactions,rowreac]
},
If[CpGs[[2]]=="m",
{rowreac={1,"u","h",k6,2};
reactions=Append[reactions,rowreac]}
]
]
},
If[CpGs[[1]]=="h",
{If[CpGs[[n]]=="u",
{rowreac={1,"h","u",k12,n};
reactions=Append[reactions,rowreac]},
If[CpGs[[n]]=="h",
{rowreac1={1,"h","u",k11,n};
rowreac2={1,"h","m",k7,n};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]},
If[CpGs[[n]]=="m",
{rowreac={1,"h","m",k8,n};
reactions=Append[reactions,rowreac]}
]
]
];
If[CpGs[[2]]=="u",
{rowreac={1,"h","u",k12,2};
reactions=Append[reactions,rowreac]},
If[CpGs[[2]]=="h",
{rowreac1={1,"h","u",k11,2};
rowreac2={1,"h","m",k7,2};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]},
If[CpGs[[2]]=="m",
{rowreac={1,"h","m",k8,2};
reactions=Append[reactions,rowreac]}
]
]
]
},
If[CpGs[[1]]=="m",
{If[CpGs[[n]]=="u",
{rowreac={1,"m","h",k10,n};
reactions=Append[reactions,rowreac]},
If[CpGs[[n]]=="h",
{rowreac={1,"m","h",k9,n};
reactions=Append[reactions,rowreac]}
]
];
If[CpGs[[2]]=="u",
{rowreac={1,"m","h",k10,2};
reactions=Append[reactions,rowreac]},
If[CpGs[[2]]=="h",
{rowreac={1,"m","h",k9,2};
reactions=Append[reactions,rowreac]}
]
]
}
]
]
];

If[CpGs[[n]]=="u",
{If[CpGs[[n-1]]=="h",
{rowreac={n,"u","h",k5,n-1};
reactions=Append[reactions,rowreac]
},
If[CpGs[[n-1]]=="m",
{rowreac={n,"u","h",k6,n-1};
reactions=Append[reactions,rowreac]}
]
];
If[CpGs[[1]]=="h",
{rowreac={n,"u","h",k5,1};
reactions=Append[reactions,rowreac]
},
If[CpGs[[1]]=="m",
{rowreac={n,"u","h",k6,1};
reactions=Append[reactions,rowreac]}
]
]
},
If[CpGs[[n]]=="h",
{If[CpGs[[n-1]]=="u",
{rowreac={n,"h","u",k12,n-1};
reactions=Append[reactions,rowreac]},
If[CpGs[[n-1]]=="h",
{rowreac1={n,"h","u",k11,n-1};
rowreac2={n,"h","m",k7,n-1};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]},
If[CpGs[[n-1]]=="m",
{rowreac={n,"h","m",k8,n-1};
reactions=Append[reactions,rowreac]}
]
]
];
If[CpGs[[1]]=="u",
{rowreac={n,"h","u",k12,1};
reactions=Append[reactions,rowreac]},
If[CpGs[[1]]=="h",
{rowreac1={n,"h","u",k11,1};
rowreac2={n,"h","m",k7,1};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]},
If[CpGs[[1]]=="m",
{rowreac={n,"h","m",k8,1};
reactions=Append[reactions,rowreac]}
]
]
]
},
If[CpGs[[n]]=="m",
{If[CpGs[[n-1]]=="u",
{rowreac={n,"m","h",k10,n-1};
reactions=Append[reactions,rowreac]},
If[CpGs[[n-1]]=="h",
{rowreac={n,"m","h",k9,n-1};
reactions=Append[reactions,rowreac]}
]
];
If[CpGs[[1]]=="u",
{rowreac={n,"m","h",k10,1};
reactions=Append[reactions,rowreac]},
If[CpGs[[1]]=="h",
{rowreac={n,"m","h",k9,1};
reactions=Append[reactions,rowreac]}
]
]
}
]
]
];

While[t<T,

propensities=reactions[[All,4]];

sumprop=Total[propensities];

rand1=RandomReal[];
rand2=RandomReal[];

tau=(1/sumprop)*Log[1/rand1];

t=t+tau;

If[t<T,
sum=0;
For[i=1,i<=Length[propensities],i++,
{sum=sum+propensities[[i]];
If[sum>rand2*sumprop,
{j=i; Break[]}
]
}
];

position=reactions[[j,1]];
newstate=reactions[[j,3]];
CpGs[[position]]=newstate;
numreactions=numreactions+1;

reactions=Select[reactions,#[[1]]!=position&&#[[5]]!=position &];


If[CpGs[[position]]=="u",
{rowreac={position,"u","h",k1,"NA"};
reactions=Append[reactions,rowreac]},
If[CpGs[[position]]=="h",
{rowreac1={position,"h","m",k2,"NA"};
rowreac2={position,"h","u",k4,"NA"};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]},
If[CpGs[[position]]=="m",
{rowreac={position,"m","h",k3,"NA"};
reactions=Append[reactions,rowreac]}
]
]
];


If[position!=1&&position!=n,
If[CpGs[[position]]=="u",
{If[CpGs[[position-1]]=="h",
{rowreac={position,"u","h",k5,position-1};
reactions=Append[reactions,rowreac];
rowreac={position-1,"h","u",k12,position};
reactions=Append[reactions,rowreac]
},
If[CpGs[[position-1]]=="m",
{rowreac={position,"u","h",k6,position-1};
reactions=Append[reactions,rowreac];
rowreac={position-1,"m","h",k10,position};
reactions=Append[reactions,rowreac]}
]
];
If[CpGs[[position+1]]=="h",
{rowreac={position,"u","h",k5,position+1};
reactions=Append[reactions,rowreac];
rowreac={position+1,"h","u",k12,position};
reactions=Append[reactions,rowreac]
},
If[CpGs[[position+1]]=="m",
{rowreac={position,"u","h",k6,position+1};
reactions=Append[reactions,rowreac];
rowreac={position+1,"m","h",k10,position};
reactions=Append[reactions,rowreac]}
]
]
},
If[CpGs[[position]]=="h",
{If[CpGs[[position-1]]=="u",
{rowreac={position,"h","u",k12,position-1};
reactions=Append[reactions,rowreac];
rowreac={position-1,"u","h",k5,position};
reactions=Append[reactions,rowreac]
},
If[CpGs[[position-1]]=="h",
{rowreac1={position,"h","u",k11,position-1};
rowreac2={position,"h","m",k7,position-1};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2];
rowreac1={position-1,"h","u",k11,position};
rowreac2={position-1,"h","m",k7,position};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]
},
If[CpGs[[position-1]]=="m",
{rowreac={position,"h","m",k8,position-1};
reactions=Append[reactions,rowreac];
rowreac={position-1,"m","h",k9,position};
reactions=Append[reactions,rowreac]
}
]
]
];
If[CpGs[[position+1]]=="u",
{rowreac={position,"h","u",k12,position+1};
reactions=Append[reactions,rowreac];
rowreac={position+1,"u","h",k5,position};
reactions=Append[reactions,rowreac]
},
If[CpGs[[position+1]]=="h",
{rowreac1={position,"h","u",k11,position+1};
rowreac2={position,"h","m",k7,position+1};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2];
rowreac1={position+1,"h","u",k11,position};
rowreac2={position+1,"h","m",k7,position};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]
},
If[CpGs[[position+1]]=="m",
{rowreac={position,"h","m",k8,position+1};
reactions=Append[reactions,rowreac];
rowreac={position+1,"m","h",k9,position};
reactions=Append[reactions,rowreac]
}
]
]
];
},
If[CpGs[[position]]=="m",
{If[CpGs[[position-1]]=="u",
{rowreac={position,"m","h",k10,position-1};
reactions=Append[reactions,rowreac];
rowreac={position-1,"u","h",k6,position};
reactions=Append[reactions,rowreac]
},
If[CpGs[[position-1]]=="h",
{rowreac={position,"m","h",k9,position-1};
reactions=Append[reactions,rowreac];
rowreac={position-1,"h","m",k8,position};
reactions=Append[reactions,rowreac]
}
]
];
If[CpGs[[position+1]]=="u",
{rowreac={position,"m","h",k10,position+1};
reactions=Append[reactions,rowreac];
rowreac={position+1,"u","h",k6,position};
reactions=Append[reactions,rowreac]
},
If[CpGs[[position+1]]=="h",
{rowreac={position,"m","h",k9,position+1};
reactions=Append[reactions,rowreac];
rowreac={position+1,"h","m",k8,position};
reactions=Append[reactions,rowreac]
}
]
]
}
]
]
]
];

If[position==1,
If[CpGs[[1]]=="u",
{If[CpGs[[n]]=="h",
{rowreac={1,"u","h",k5,n};
reactions=Append[reactions,rowreac];
rowreac={n,"h","u",k12,1};
reactions=Append[reactions,rowreac]
},
If[CpGs[[n]]=="m",
{rowreac={1,"u","h",k6,n};
reactions=Append[reactions,rowreac];
rowreac={n,"m","h",k10,1};
reactions=Append[reactions,rowreac]}
]
];
If[CpGs[[2]]=="h",
{rowreac={1,"u","h",k5,2};
reactions=Append[reactions,rowreac];
rowreac={2,"h","u",k12,1};
reactions=Append[reactions,rowreac]
},
If[CpGs[[2]]=="m",
{rowreac={1,"u","h",k6,2};
reactions=Append[reactions,rowreac];
rowreac={2,"m","h",k10,1};
reactions=Append[reactions,rowreac]}
]
]
},
If[CpGs[[1]]=="h",
{If[CpGs[[n]]=="u",
{rowreac={1,"h","u",k12,n};
reactions=Append[reactions,rowreac];
rowreac={n,"u","h",k5,1};
reactions=Append[reactions,rowreac]
},
If[CpGs[[n]]=="h",
{rowreac1={1,"h","u",k11,n};
rowreac2={1,"h","m",k7,n};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2];
rowreac1={n,"h","u",k11,1};
rowreac2={n,"h","m",k7,1};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]
},
If[CpGs[[n]]=="m",
{rowreac={1,"h","m",k8,n};
reactions=Append[reactions,rowreac];
rowreac={n,"m","h",k9,1};
reactions=Append[reactions,rowreac]
}
]
]
];
If[CpGs[[2]]=="u",
{rowreac={1,"h","u",k12,2};
reactions=Append[reactions,rowreac];
rowreac={2,"u","h",k5,1};
reactions=Append[reactions,rowreac]
},
If[CpGs[[2]]=="h",
{rowreac1={1,"h","u",k11,2};
rowreac2={1,"h","m",k7,2};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2];
rowreac1={2,"h","u",k11,1};
rowreac2={2,"h","m",k7,1};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]
},
If[CpGs[[2]]=="m",
{rowreac={1,"h","m",k8,2};
reactions=Append[reactions,rowreac];
rowreac={2,"m","h",k9,1};
reactions=Append[reactions,rowreac]
}
]
]
];
},
If[CpGs[[1]]=="m",
{If[CpGs[[n]]=="u",
{rowreac={1,"m","h",k10,n};
reactions=Append[reactions,rowreac];
rowreac={n,"u","h",k6,1};
reactions=Append[reactions,rowreac]
},
If[CpGs[[n]]=="h",
{rowreac={1,"m","h",k9,n};
reactions=Append[reactions,rowreac];
rowreac={n,"h","m",k8,1};
reactions=Append[reactions,rowreac]
}
]
];
If[CpGs[[2]]=="u",
{rowreac={1,"m","h",k10,2};
reactions=Append[reactions,rowreac];
rowreac={2,"u","h",k6,1};
reactions=Append[reactions,rowreac]
},
If[CpGs[[2]]=="h",
{rowreac={1,"m","h",k9,2};
reactions=Append[reactions,rowreac];
rowreac={2,"h","m",k8,1};
reactions=Append[reactions,rowreac]
}
]
]
}
]
]
]
];


If[position==n,
If[CpGs[[n]]=="u",
{If[CpGs[[n-1]]=="h",
{rowreac={n,"u","h",k5,n-1};
reactions=Append[reactions,rowreac];
rowreac={n-1,"h","u",k12,n};
reactions=Append[reactions,rowreac]
},
If[CpGs[[n-1]]=="m",
{rowreac={n,"u","h",k6,n-1};
reactions=Append[reactions,rowreac];
rowreac={n-1,"m","h",k10,n};
reactions=Append[reactions,rowreac]}
]
];
If[CpGs[[1]]=="h",
{rowreac={n,"u","h",k5,1};
reactions=Append[reactions,rowreac];
rowreac={1,"h","u",k12,n};
reactions=Append[reactions,rowreac]
},
If[CpGs[[1]]=="m",
{rowreac={n,"u","h",k6,1};
reactions=Append[reactions,rowreac];
rowreac={1,"m","h",k10,n};
reactions=Append[reactions,rowreac]}
]
]
},
If[CpGs[[n]]=="h",
{If[CpGs[[n-1]]=="u",
{rowreac={n,"h","u",k12,n-1};
reactions=Append[reactions,rowreac];
rowreac={n-1,"u","h",k5,n};
reactions=Append[reactions,rowreac]
},
If[CpGs[[n-1]]=="h",
{rowreac1={n,"h","u",k11,n-1};
rowreac2={n,"h","m",k7,n-1};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2];
rowreac1={n-1,"h","u",k11,n};
rowreac2={n-1,"h","m",k7,n};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]
},
If[CpGs[[n-1]]=="m",
{rowreac={n,"h","m",k8,n-1};
reactions=Append[reactions,rowreac];
rowreac={n-1,"m","h",k9,n};
reactions=Append[reactions,rowreac]
}
]
]
];
If[CpGs[[1]]=="u",
{rowreac={n,"h","u",k12,1};
reactions=Append[reactions,rowreac];
rowreac={1,"u","h",k5,n};
reactions=Append[reactions,rowreac]
},
If[CpGs[[1]]=="h",
{rowreac1={n,"h","u",k11,1};
rowreac2={n,"h","m",k7,1};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2];
rowreac1={1,"h","u",k11,n};
rowreac2={1,"h","m",k7,n};
reactions=Append[reactions,rowreac1];
reactions=Append[reactions,rowreac2]
},
If[CpGs[[1]]=="m",
{rowreac={n,"h","m",k8,1};
reactions=Append[reactions,rowreac];
rowreac={1,"m","h",k9,n};
reactions=Append[reactions,rowreac]
}
]
]
];
},
If[CpGs[[n]]=="m",
{If[CpGs[[n-1]]=="u",
{rowreac={n,"m","h",k10,n-1};
reactions=Append[reactions,rowreac];
rowreac={n-1,"u","h",k6,n};
reactions=Append[reactions,rowreac]
},
If[CpGs[[n-1]]=="h",
{rowreac={n,"m","h",k9,n-1};
reactions=Append[reactions,rowreac];
rowreac={n-1,"h","m",k8,n};
reactions=Append[reactions,rowreac]
}
]
];
If[CpGs[[1]]=="u",
{rowreac={n,"m","h",k10,1};
reactions=Append[reactions,rowreac];
rowreac={1,"u","h",k6,n};
reactions=Append[reactions,rowreac]
},
If[CpGs[[1]]=="h",
{rowreac={n,"m","h",k9,1};
reactions=Append[reactions,rowreac];
rowreac={1,"h","m",k8,n};
reactions=Append[reactions,rowreac]
}
]
]
}
]
]
]
];

];

While[t>times[[rec]]&&rec<=Length[times],
CpGsStates[[rec,All]]=CpGs;
rec=rec+1
];

];

;


]

EndTime=AbsoluteTime[]-StartTime




